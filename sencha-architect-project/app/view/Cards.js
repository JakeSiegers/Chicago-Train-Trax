/*
 * File: app/view/Cards.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TrainTrax.view.Cards', {
    extend: 'Ext.Panel',

    requires: [
        'TrainTrax.view.Start',
        'TrainTrax.view.TrainLines',
        'TrainTrax.view.TrainLineStops',
        'Ext.Panel'
    ],

    config: {
        itemId: 'cardsScreen',
        layout: {
            type: 'card',
            animation: 'scroll'
        },
        items: [
            {
                xtype: 'start',
                itemId: 'startScreen'
            },
            {
                xtype: 'lines',
                itemId: 'trainLinesScreen'
            },
            {
                xtype: 'stopsonline',
                itemId: 'trainLineStopsScreen'
            }
        ],
        listeners: [
            {
                fn: 'onPanelInitialize',
                event: 'initialize'
            }
        ]
    },

    onPanelInitialize: function(component, eOpts) {
        this.mask();
        AERP.Ajax.request({
            url:'listAllLines',
            success:function(reply){
                this.unmask();
                Ext.ComponentQuery.query('#trainLineList')[0].getStore().setData(reply.data);
                this.setScreen('trainLinesScreen');
            },
            failure:function(){
                this.unmask();
            },
            scope:this
        });
    },

    setScreen: function(itemId, goingBack) {
        if(goingBack){
            this.getLayout().setAnimation({
                type:'cover',
                //duration:'500',
                direction:'right',
                easing:'ease-out'
            });
        }else{
            this.getLayout().setAnimation({
                type:'reveal',
                easing:'ease-out'
            });
        }
        this.setActiveItem('#'+itemId);

    }

});